/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Entrance_gui.java
 *
 * Created on Jan 18, 2011, 9:45:20 PM
 */

package Basic_Codes;

import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import Support.*;
import java.io.IOException;

/**
       * This class will prompt the main user interface to select the file we want to use.
       *
       *
       * @author  < Ishara Premadasa > mailTo: <ishaa@live.com>
       * @version : 1.0
       */
public class Entrance_gui extends javax.swing.JFrame {

    /* Initialization of variables */
    static private final String newline = "\n";


    JFileChooser fc = new JFileChooser();
    String path_name;
    private String outputFilename;
    private PDF_extractor extractor = new PDF_extractor();

    


    /** Creates new form Entrance_gui */
    public Entrance_gui() {
        initComponents();
        setVisible(true);
    }


    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        inputField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        goButton = new javax.swing.JButton();
        authorButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        licenseButton = new javax.swing.JButton();
        instructions = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_And_Icons/developer label.png"))); // NOI18N

        titleLabel.setFont(new java.awt.Font("Matura MT Script Capitals", 2, 36));
        titleLabel.setForeground(new java.awt.Color(102, 102, 102));
        titleLabel.setText("StorePicz 1.0");

        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });

        browseButton.setText("Browse");
        browseButton.setBorder(null);
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.setBorderPainted(false);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setBorderPainted(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        goButton.setText("Get Images");
        goButton.setBorderPainted(false);
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        authorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_And_Icons/about_button.png"))); // NOI18N
        authorButton.setToolTipText("About ");
        authorButton.setBorder(null);
        authorButton.setBorderPainted(false);
        authorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorButtonActionPerformed(evt);
            }
        });

        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_And_Icons/help button.png"))); // NOI18N
        helpButton.setToolTipText("Help");
        helpButton.setBorder(null);
        helpButton.setBorderPainted(false);
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        licenseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_And_Icons/license button.png"))); // NOI18N
        licenseButton.setToolTipText("License");
        licenseButton.setBorder(null);
        licenseButton.setBorderPainted(false);
        licenseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                licenseButtonActionPerformed(evt);
            }
        });

        instructions.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        instructions.setForeground(new java.awt.Color(102, 102, 102));
        instructions.setText("Insert pdf/doc or odt files only............");
        instructions.setName("inputField"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(instructions, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(goButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(browseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addComponent(licenseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(authorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(354, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(instructions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authorButton, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(helpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(licenseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed

            int returnVal = fc.showOpenDialog(Entrance_gui.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();

                 //This is where the application would open the file.
                path_name = file.getPath();
                System.out.println("Opening: " + path_name + newline);
                inputField.setText(path_name) ;
                }
else {

                JOptionPane.showMessageDialog(this, "Open command cancelled by user");
            }



   // TODO add your handling code here:
    }//GEN-LAST:event_browseButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed

            // yes return 0 , No return 1 , cancel return 2;
        int exit = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit from StorePicz");
        if(exit==0)
            dispose();


        // TODO add your handling code here:
    }//GEN-LAST:event_exitButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
       inputField.setText("");
       // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        if(path_name==null)
            {
                JOptionPane.showMessageDialog(this, "You haven't selected a file");
            }

            else{
            if(path_name.endsWith(".pdf") || path_name.endsWith(".PDF")){

                    this.outputFilename = path_name;
                    String[] input = {outputFilename,"",""};
                    try {
                        extractor.extractImages(input,path_name);
                JOptionPane.showMessageDialog(this, "Images stored in the input folder ","Done!",JOptionPane.PLAIN_MESSAGE);

                    } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Stream is unreadable ", "An Error Occured!",JOptionPane.ERROR_MESSAGE );
                    }
                    catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Storepicz can't get the images in this document ", "File read error!",JOptionPane.ERROR_MESSAGE );
                    }
            }

            else if(path_name.endsWith(".doc")||  path_name.endsWith(".docx")  ){

                    try {
                    File_Extractor doc_extractor = new DOC_extractor(path_name);
                    this.outputFilename= doc_extractor.convert_file();
                    String [] input = {outputFilename,"",""};
                    extractor.extractImages(input, path_name);
                JOptionPane.showMessageDialog(this, "Images stored in the input folder ","Done!",JOptionPane.PLAIN_MESSAGE);

                } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Stream is unreadable ", "An Error Occured!",JOptionPane.ERROR_MESSAGE );
                    }
                    catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Storepicz can't get the images in this document ", "File read error!",JOptionPane.ERROR_MESSAGE );
                    }
            }

            else if(path_name.endsWith(".odt")){

                    try {
                    File_Extractor odt_extractor = new ODT_extractor(path_name);
                    this.outputFilename= odt_extractor.convert_file();
                    String [] input = {outputFilename,"",""};
                    extractor.extractImages(input, path_name);
               JOptionPane.showMessageDialog(this, "Images stored in the input folder ","Done!",JOptionPane.PLAIN_MESSAGE);

                    } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Stream is unreadable ", "An Error Occured!",JOptionPane.ERROR_MESSAGE );
                    }
                    catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Storepicz can't get the images in this document ", "File read error!",JOptionPane.ERROR_MESSAGE );
                    }
            }
            else {
                JOptionPane.showMessageDialog(this, "Unsupported file format! Choose a .pdf/.odf/.docx or .doc file", "File format error !", JOptionPane.ERROR_MESSAGE);
            }
           }


        // TODO add your handling code here:
    }//GEN-LAST:event_goButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        Help help = new Help();
        help.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_helpButtonActionPerformed

    private void licenseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_licenseButtonActionPerformed
        License license = new License();
        license.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_licenseButtonActionPerformed

    private void authorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorButtonActionPerformed
        About_author authorinfo = new About_author();
        authorinfo.setVisible(true);
        // TODO add your handling code here:
}//GEN-LAST:event_authorButtonActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton authorButton;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton goButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel image;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel instructions;
    private javax.swing.JButton licenseButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
